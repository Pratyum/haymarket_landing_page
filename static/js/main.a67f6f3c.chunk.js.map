{"version":3,"sources":["App2.js","serviceWorker.js","index.js"],"names":["App2","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","window","document","title","react_default","a","createElement","Fragment","className","src","style","margin","display","width","marginTop","height","color","fontSize","backgroundColor","onClick","open","reactjs_popup_es","trigger","position","on","contentStyle","borderRadius","paddingBottom","textAlign","Component","Boolean","location","hostname","match","ReactDOM","render","App2_App2","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a67f6f3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport \"./App2.css\";\nexport class App2 extends Component {\n  componentDidMount() {\n    window.document.title = \"Black Mountain\";\n    // document.body.style.backgroundColor = \"#80b4ec\";\n  }\n  render() {\n    return (\n      <>\n        <header>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div>\n              <span className=\"navbar-brand\">\n                <img\n                  src=\"../static/haymarket.png\"\n                  style={{\n                    margin: \"30 30 30 30\",\n                    display: \"block\",\n                    width: \"50%\"\n                  }}\n                />\n              </span>\n              <span className=\"navbar-text pull-right\">\n                Independence | Creativity | Expertise | Dynamism | Integrity\n              </span>\n            </div>\n          </nav>\n        </header>\n        <div className=\"container-fluid\" style={{ marginTop: \"2vh\" }}>\n          <div className=\"row\" style={{ height: \"15vh\" }}>\n            <div className=\"col align-items-center\">\n              <h1 style={{ color: \"rgb(127,127,127)\", fontSize: \"65px\" }}>\n                HR Portal\n              </h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-fluid\">\n          <div className=\"row justify-content-around\">\n            <div\n              className=\"col-12 col-sm-4 col-lg-3 circle-background\"\n              style={{ backgroundColor: \"rgb(78,195,210)\" }}\n              onClick={() =>\n                window.open(\n                  \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=68f7630c-af38-493e-af0d-42e1a23146a7&scope=email&redirect_uri=https%3A%2F%2Faccounts.zoho.com%2Faccounts%2Foauthcallback&state=d473e2ae2485028e30c61375eec79187f5fd0771819613d7daca3ff1404d8350b1f6e6adb4e82db7987182755c797725a151263deef2060316930160af63f06df970b5e580311a651f38e6027275b0410596175d0c074dd76c3c4ece9205fd0e&prompt=select_account\",\n                  \"_blank\"\n                )\n              }\n            >\n              <Popup\n                trigger={\n                  <div className=\"hello\">\n                    <h3>\n                      HR <br />\n                      Self Service\n                    </h3>\n                  </div>\n                }\n                position=\"bottom center\"\n                on=\"hover\"\n                contentStyle={{ borderRadius: \"5px\", width: \"30vw\" }}\n                className=\"popup\"\n              >\n                <div className=\"row align-items-center\">\n                  <div className=\"col-md-6 \">\n                    <img src=\"../static/microsoft_login.png\" width={\"100%\"} />\n                    {/* <iframe src=\"https://accounts.zoho.com/signin?servicename=zohopeople&signupurl=https://www.zoho.com/people/signup.html\" width={'100%'}/> */}\n                  </div>\n                  <div className=\"col-md-6\">\n                    <p>\n                      Access Zoho People by using your Microsoft Office 365\n                      'username' and 'password' and enable single sign on\n                      feature.\n                    </p>\n                  </div>\n                </div>\n              </Popup>\n            </div>\n\n            <div\n              className=\"col-12 col-sm-4 col-lg-3 circle-background\"\n              style={{ backgroundColor: \"rgb(242,123,48)\" }}\n              onClick={() =>\n                window.open(\n                  \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=1e14a5c7-f257-4f32-9c77-a8b8f6c88e0d&scope=email&redirect_uri=https%3A%2F%2Faccounts.zoho.com%2Faccounts%2Foauthcallback&state=d473e2ae2485028e30c61375eec79187f5fd0771819613d7daca3ff1404d8350a895d4294008464110b7ecdbbf5cf5c0dd17a13a21d67d47ae9a7648fc1c3a36fc16e7b7422b1c282007acf02fa0f4889630a3783a05f92f1de89e2ff7b6c14c&prompt=select_account\",\n                  \"_blank\"\n                )\n              }\n            >\n              <Popup\n                trigger={\n                  <div className=\"hello\">\n                    <h3>\n                      Travel & <br />\n                      Expense\n                    </h3>\n                  </div>\n                }\n                position=\"bottom center\"\n                on=\"hover\"\n                contentStyle={{ borderRadius: \"5px\", width: \"30vw\" }}\n                className=\"popup\"\n              >\n                <div className=\"row align-items-center\">\n                  <div className=\"col-md-6 \">\n                    <img src=\"../static/microsoft_login.png\" width={\"100%\"} />\n                    {/* <iframe src=\"https://accounts.zoho.com/signin?servicename=zohopeople&signupurl=https://www.zoho.com/people/signup.html\" width={'100%'}/> */}\n                  </div>\n                  <div className=\"col-md-6\">\n                    <p>\n                      Access Zoho People by using your Microsoft Office 365\n                      'username' and 'password' and enable single sign on\n                      feature.\n                    </p>\n                  </div>\n                </div>\n              </Popup>\n            </div>\n\n            <div\n              className=\"col-12 col-sm-4 col-lg-3 circle-background\"\n              style={{ backgroundColor: \"rgb(234,31,77)\" }}\n              onClick={() => window.open(\"https://www.panalyt.com/\", \"_blank\")}\n            >\n              <Popup\n                trigger={\n                  <div className=\"hello\">\n                    <h3>\n                      People <br />\n                      Analytics\n                    </h3>\n                  </div>\n                }\n                position=\"bottom center\"\n                on=\"hover\"\n                contentStyle={{ borderRadius: \"5px\", width: \"30vw\" }}\n                className=\"popup\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <p>\n                      Some Managers have access to useful data and analytics on\n                      their team, via the Panalyt “People Analytics” tool. If\n                      you have an account you access the tool by clicking this\n                      link.\n                    </p>\n                    <p>This page also has an easy \"forgot password\" link</p>\n                  </div>\n                </div>\n              </Popup>\n            </div>\n          </div>\n        </div>\n        <footer className=\"container-fluid\" style={{ paddingBottom: \"10px\" }}>\n          <div className=\"row align-items-end\">\n            <div className=\"col-6 col-md-2 no-padding-right\">\n              <h4 style={{ textAlign: \"end\" }}>Provided by:</h4>\n            </div>\n            <div className=\"col-6 col-md-2 no-padding-left\">\n              <img src=\"../static/group2.png\" style={{ width: \"100%\" }} />\n            </div>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App2 } from \"./App2\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App2 />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}